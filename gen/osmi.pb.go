// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/osmi.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketRequest) Reset() {
	*x = TicketRequest{}
	mi := &file_proto_osmi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketRequest) ProtoMessage() {}

func (x *TicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_osmi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketRequest.ProtoReflect.Descriptor instead.
func (*TicketRequest) Descriptor() ([]byte, []int) {
	return file_proto_osmi_proto_rawDescGZIP(), []int{0}
}

func (x *TicketRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TicketRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TicketId      string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketResponse) Reset() {
	*x = TicketResponse{}
	mi := &file_proto_osmi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketResponse) ProtoMessage() {}

func (x *TicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_osmi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketResponse.ProtoReflect.Descriptor instead.
func (*TicketResponse) Descriptor() ([]byte, []int) {
	return file_proto_osmi_proto_rawDescGZIP(), []int{1}
}

func (x *TicketResponse) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *TicketResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_osmi_proto protoreflect.FileDescriptor

const file_proto_osmi_proto_rawDesc = "" +
	"\n" +
	"\x10proto/osmi.proto\x12\x04osmi\"C\n" +
	"\rTicketRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"E\n" +
	"\x0eTicketResponse\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status2H\n" +
	"\vOsmiService\x129\n" +
	"\fCreateTicket\x12\x13.osmi.TicketRequest\x1a\x14.osmi.TicketResponseB\x11Z\x0fosmi-server/genb\x06proto3"

var (
	file_proto_osmi_proto_rawDescOnce sync.Once
	file_proto_osmi_proto_rawDescData []byte
)

func file_proto_osmi_proto_rawDescGZIP() []byte {
	file_proto_osmi_proto_rawDescOnce.Do(func() {
		file_proto_osmi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_osmi_proto_rawDesc), len(file_proto_osmi_proto_rawDesc)))
	})
	return file_proto_osmi_proto_rawDescData
}

var file_proto_osmi_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_osmi_proto_goTypes = []any{
	(*TicketRequest)(nil),  // 0: osmi.TicketRequest
	(*TicketResponse)(nil), // 1: osmi.TicketResponse
}
var file_proto_osmi_proto_depIdxs = []int32{
	0, // 0: osmi.OsmiService.CreateTicket:input_type -> osmi.TicketRequest
	1, // 1: osmi.OsmiService.CreateTicket:output_type -> osmi.TicketResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_osmi_proto_init() }
func file_proto_osmi_proto_init() {
	if File_proto_osmi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_osmi_proto_rawDesc), len(file_proto_osmi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_osmi_proto_goTypes,
		DependencyIndexes: file_proto_osmi_proto_depIdxs,
		MessageInfos:      file_proto_osmi_proto_msgTypes,
	}.Build()
	File_proto_osmi_proto = out.File
	file_proto_osmi_proto_goTypes = nil
	file_proto_osmi_proto_depIdxs = nil
}
